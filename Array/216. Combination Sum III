class Solution {
    let nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]
    
    var res = [[Int]]()
    
    func combinationSum3(_ k: Int, _ n: Int) -> [[Int]] {
        
        var path = [Int]()
        
        comb(n, &path, k, 0)
        
        return res 
    }
    
    func comb(_ n : Int, _ path : inout [Int], _ k : Int, _ index : Int){
        
        if path.count == k && n == 0{
            res.append(path)
        } else if path.count >= k || n < 0{
            return
        }
        
        for i in index..<nums.count{
            
           // if i > index && 
            if n - nums[i] < 0{
                break
            }
            path.append(nums[i])
            comb(n-nums[i], &path, k, i+1)
            path.popLast()
        }
    }
}
