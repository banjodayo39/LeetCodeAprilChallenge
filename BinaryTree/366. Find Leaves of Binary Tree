class Solution {
    var result =  [[Int]]()
    func findLeaves(_ root: TreeNode?) -> [[Int]] {
       
        getHeight(root)
        return result
        
    }
    
    func getHeight(_ root : TreeNode?) -> Int{
        guard var root = root else{
            return -1
        }
        
        let lHeight = getHeight(root.left)
        let rHeight = getHeight(root.right)
        
        var currH = max(lHeight, rHeight) + 1
        
        if result.count == currH{
            result.append([])
        }
        
    
        result[currH].append(root.val)
        
        return currH
    }
    
    func dfs(_ node : TreeNode?, _ res : inout [Int]){
        guard var node = node else{
            return 
        }
        if node.left != nil && node.left?.right == nil && node.left?.right == nil{
               let val = node.left!.val
               res.append(val)
               node.left = nil
        }else{
            dfs(node.left, &res)
        }
        
        if node.right != nil && node.right?.right == nil && node.right?.right == nil{
               let val = node.right!.val
               res.append(val)
               
               node.right = nil
        }else{
            dfs(node.right, &res)
        }
        
    }
}
