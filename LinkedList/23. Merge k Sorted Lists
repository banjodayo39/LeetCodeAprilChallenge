/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public var val: Int
 *     public var next: ListNode?
 *     public init() { self.val = 0; self.next = nil; }
 *     public init(_ val: Int) { self.val = val; self.next = nil; }
 *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }
 * }
 */
class Solution {
    func mergeKLists(_ lists: [ListNode?]) -> ListNode? {
        
        var nodes = [Int]()
        
        var head : ListNode? = ListNode(0)
        var point = head
        
        for i in lists{
            var curr = i
            
            while curr != nil{
                if let val = curr?.val{
                     nodes.append(val) 
                    curr = curr?.next
                }
            }
        }
        
        nodes.sort()
        
        for i in nodes{
            point?.next = ListNode(i)
            point = point?.next
        }
        
        return head?.next
        
    }
}
