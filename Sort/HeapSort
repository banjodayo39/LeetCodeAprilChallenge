func heapify(_ arr : inout [Int], _ n : Int, _ i : Int){
    
    var largest = i
    let l = (2 * i) + 1
    let r = (2 * i) + 2
 
    
    if l < n && arr[largest] < arr[l]{
        largest = l
          
    }
  

    
    if r < n && arr[largest] < arr[r]{
        largest = r

    }
    
    if largest != i{
        (arr[i] , arr[largest]) = (arr[largest], arr[i])
        heapify(&arr, n, largest)
    }
}

func heapSort(_ arr: inout [Int]) -> [Int]{
    let n = arr.count
    
    
    //build max heap
    for i in  stride(from : (n/2) - 1, to :  -1, by : -1){
        heapify(&arr, n, i)
    }
    
    for i in  stride(from : n - 1, to :  -1, by : -1){
        (arr[i], arr[0]) = (arr[0], arr[i])
        heapify(&arr, i, 0)
    }
    return arr
}
